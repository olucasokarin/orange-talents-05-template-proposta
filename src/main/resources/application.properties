# datasource
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.database.driverClassName=org.postgresql.Driver
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5436/proposta}
spring.jpa.hibernate.ddl-auto=create-drop

# urls
solicitation.host=${SOLICITATION_URL:http://localhost:9999/api/solicitacao}
card.host=${CARD_URL:http://localhost:8888/api/cartoes}

# feign
feign.client.config.solicitation.read-timeout=100
feign.client.config.solicitation.connect-timeout=100
feign.client.config.card.read-timeout=100
feign.client.config.card.connect-timeout=100
feign.hystrix.enabled=true

# actuator
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=health, metrics, prometheus
management.endpoint.shutdown.enabled=true
management.endpoint.info.enabled=true
management.endpoints.prometheus.enabled=true

management.metrics.tags.application=${APPLICATION_NAME:proposal system}
management.metrics.tags.ambient=${AMBIENT:development}

# time schedules
schedule.time.card.fixedDelay = 10000
schedule.time.notice.travel.fixedDelay = 10000

# keycloak configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/myrealm}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/myrealm/protocol/openid-connect/certs}

# jaeger
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
opentracing.jaeger.service-name=${spring.application.name:proposal}
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}
